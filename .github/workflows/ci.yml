name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: personal_finance_tracker_dev
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: personal_finance_tracker_dev
      JWT_SECRET: ${{ secrets.JWT_SECRET_DEV }}
      NODE_ENV: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

      - name: Build Docker image
        run: docker build -t personal-finance-tracker-backend .

      - name: Tag Docker image
        run: docker tag personal-finance-tracker-backend:latest your_dockerhub_username/personal-finance-tracker-backend:latest

      - name: Log in to Docker Hub
        run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: docker push your_dockerhub_username/personal-finance-tracker-backend:latest
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}

  deploy:
    runs-on: ubuntu-latest

    needs: build

    env:
      DB_HOST: ${{ secrets.DB_HOST_DEV }}
      DB_PORT: ${{ secrets.DB_PORT_DEV }}
      DB_USERNAME: ${{ secrets.DB_USERNAME_DEV }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD_DEV }}
      DB_NAME: ${{ secrets.DB_NAME_DEV }}
      JWT_SECRET: ${{ secrets.JWT_SECRET_DEV }}
      NODE_ENV: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Vercel
        run: |
          npm install -g vercel
          vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
